// Este Ã© o Jenkinsfile para o projeto Frontend (report-frontend)

pipeline {
    agent any // Executa em qualquer 'agente' (mÃ¡quina) disponÃ­vel no Jenkins

    environment {
        // Define o diretÃ³rio exato do projeto no servidor
        PROJECT_DIR = '/var/www/report-frontend'

        // Define o caminho para o NVM, que pertence ao utilizador 'ubuntu'
        // (O utilizador 'jenkins' precisa de permissÃ£o de leitura para esta pasta)
        NVM_DIR = '/home/ubuntu/.nvm'
    }

    stages {
        // --- Fase 1: Obter o CÃ³digo (CI) ---
        stage('Checkout') {
            steps {
                echo "A obter o cÃ³digo mais recente..."
                // Limpa o espaÃ§o de trabalho antes de obter o cÃ³digo
                cleanWs()
                // ObtÃ©m o cÃ³digo (jÃ¡ configurado na UI do Jenkins)
                checkout scm
            }
        }

        // --- Fase 2: Testes, Lint e Build (CI) ---
        // Ao contrÃ¡rio do Laravel (onde simulÃ¡mos), aqui podemos executar
        // o build real, pois o Node/NVM estÃ¡ no servidor.
        stage('Test, Lint & Build (CI)') {
            steps {
                // O Jenkins nÃ£o carrega o .bashrc, entÃ£o temos que carregar o NVM manualmente
                sh '''
                    echo "A carregar NVM..."
                    export NVM_DIR="${env.NVM_DIR}"
                    [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"

                    echo "A usar Node 20..."
                    nvm use 20

                    echo "A instalar dependÃªncias (npm ci)..."
                    npm ci

                    echo "A executar Lint..."
                    npm run lint

                    echo "A executar Build (para teste)..."
                    npm run build
                '''
            }
        }

        // --- Fase 3: Deploy (CD) ---
        stage('Deploy') {
            steps {
                // Entra no diretÃ³rio do projeto para executar os comandos
                dir(PROJECT_DIR) {
                    script {
                        echo "A iniciar o deploy no diretÃ³rio: ${PROJECT_DIR}"

                        // Usamos o 'sh' multi-linha para carregar o NVM e executar comandos
                        sh '''
                            echo "A carregar NVM..."
                            export NVM_DIR="${env.NVM_DIR}"
                            [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"

                            echo "A usar Node 20..."
                            nvm use 20

                            echo "A instalar dependÃªncias de produÃ§Ã£o (npm ci)..."
                            npm ci

                            echo "A gerar build de produÃ§Ã£o..."
                            npm run build

                            echo "A reiniciar a aplicaÃ§Ã£o com PM2..."
                            # Instala o PM2 (para o caso de nÃ£o estar lÃ¡ nesta versÃ£o do Node)
                            npm install -g pm2

                            # Reinicia a aplicaÃ§Ã£o de frontend
                            pm2 reload report-frontend 2>/dev/null || pm2 start "npm run start" --name "report-frontend"
                        '''

                        echo "ðŸš€ Deploy do Frontend concluÃ­do!"
                    }
                }
            }
        }
    }

    post {
        // Acontece sempre no final, quer falhe ou tenha sucesso
        always {
            echo 'Limpeza... (se necessÃ¡rio)'
        }
    }
}